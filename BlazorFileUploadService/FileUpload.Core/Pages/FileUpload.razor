@page "/"
@inject NavigationManager NavigationManager
@inject  IStringLocalizer<FileUpload> Localizer
@using Microsoft.Extensions.Localization
@inherits FileUploadBase

<h1>@Localizer["Upload files"]</h1>

<InputFile multiple OnChange="HandleSelection" />

@if (SelectedFiles != null)
{
    foreach (var file in SelectedFiles)
    {
        var isLoading = file.Data.Position > 0;

        <div class="file-row">
            <div>
                <h2>@file.Name</h2>
                @Localizer["File size:"] <strong>@file.Size @Localizer["bytes"]</strong>
                @Localizer["Last modified:"] <strong>@file.LastModified.ToString("G")</strong>
                @Localizer["File type:"] <strong>@file.Type</strong>
                @Localizer["Download link:"]
                @{
                    var downloadLink = this.GetDownloadLink(file);
                    <a href="@downloadLink">@downloadLink</a>
                }
            </div>

            <button @onclick="() => this.UploadFile(file)" disabled="@isLoading">
                @if (!isLoading)
                {
                    <span>@Localizer["Upload file"]</span>
                }
                else
                {
                    <span>@Localizer["Progress:"] @((100.0 * file.Data.Position / file.Size).ToString("0"))%</span>
                }
            </button>
        </div>
    }
}

